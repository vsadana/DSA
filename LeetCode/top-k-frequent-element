//https://leetcode.com/problems/top-k-frequent-elements/
class Solution {
func topKFrequent(_ nums: [Int], _ k: Int) -> [Int] {
    var dict = [Int : Int]()
    if nums.count == 1 {
        return nums
    }
// 1. find occurances of every element
    for i in nums {
        if let val = dict[i] {
            dict[i]  = val + 1
        } else {
            dict[i] = 1
        }
    }

/// 2. add occurances in dict with Bucket sort
/// Index: Count
/// value: values which are occuring on that count
    var upArray = [Int : [Int]]()
    for (i,j) in dict {
        if let up = upArray[j]  {
            upArray[j]?.append(i)
        } else {
            upArray[j] = []
            upArray[j]?.append(i)
        }
    }   

/// 3. sort to get K frequent element
    let sortedDict = upArray.sorted {
        $0.key > $1.key
    }

    var newArr = [Int]()
    for i in sortedDict {
        for j in i.value {
            if newArr.count == k {
                return newArr
            } else {
                newArr.append(j)
            }
        }
    }
    return newArr
}
}
